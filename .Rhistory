subset(GDPC1,as.Date("2000-01-01")>DATE)
colnames(GDPC1)<-c('Date','GDP')
colnames(GDPC1)<-c("Date","GDP")
colnames(GDPC1) <- c("Date","GDP")
class(GDPC1)
typeof(GDPC1)
str(GDPC1)
str(out)
out
require(Quandl)
GDPC1 = Quandl("FRED/GDPC1", start_date="2000-01-01",end_date="2016-12-31",type="xts")
install.packages("Quandl")
require(Quandl)
GDPC1 = Quandl("FRED/GDPC1", start_date="2000-01-01",end_date="2016-12-31",type="xts")
library(mFilter)
library(quantmod)
require(Quandl)
GDPC1 = Quandl("FRED/GDPC1", start_date="2000-01-01",end_date="2016-12-31",type="xts")
hpf <- hpfilter(log(GDPC1),freq = 1600)
out <- xts(cbind(hpf$x, hpf$trend, hpf$cycle), index(GDPC1))
colnames(out) <- c("x", "trend", "cycle")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out[,"x"], t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out[,"x"], col = "steelblue")
lines(out[,"trend"], col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend)")
lines(out[,"cycle"], col = "steelblue")
library(mFilter)
library(quantmod)
getSymbols('GDPC1',src='FRED')
GDP <- data$GDPC1
GDP[paste(date.start= "2000-1-01",date.end="2016-12-31",sep="/")]
hpf <- hpfilter(log(GDP),freq = 1600)
library(mFilter)
library(quantmod)
getSymbols('GDPC1',src='FRED')
GDPC1[paste(date.start= "2000-1-01",date.end="2016-12-31",sep="/")]
hpf <- hpfilter(log(GDPC1),freq = 1600)
out <- xts(cbind(hpf$x, hpf$trend, hpf$cycle), index(GDPC1))
colnames(out) <- c("x", "trend", "cycle")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out[,"x"], t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out[,"x"], col = "steelblue")
lines(out[,"trend"], col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend)")
lines(out[,"cycle"], col = "steelblue")
format(GDPC1, format = "%Y/0%q")
getSymbols('GDPC1',src='FRED')
GDPC1[paste(date.start= "2000-1-01",date.end="2016-12-31",sep="/")]
is.data.frame(GDPC1)
is.vector(GDPC1)
is.numeric(GDPC1)
is.data.frame(out)
is.numeric(out)
?axis
out
gdpdata <- data.frame(col = rep(colnames(out), each = nrow(out)),
row = rep(rownames(out), ncol(out)),
value = as.vector(out))
data.frame(col = rep(colnames(out), each = nrow(out)),
+            row = rep(rownames(out), ncol(out)),
+            value = as.vector(out))
data.frame(col = rep(colnames(out), each = nrow(out)), row = rep(rownames(out), ncol(out)), value = as.vector(out))
mydata = Quandl("FRED/GDP", collapse="annual")
mydata
mydata = Quandl("FRED/GDP", collapse="quarterly")
mydata
GDPC1 = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
GDPC1
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(hpf$x, hpf$trend, hpf$cycle)
out
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
out
format(GDP$DATE, format = "%Y/0%q")
format(GDP$DATE, format = "%Y/%q")
as.yearqtr(GDP$DATE, format = "%Y/%q")
GDP
GDP
as.yearqtr(GDP$DATE, format = "%Y/%q")
out$Date <-as.yearqtr(out$DATE, format = "%Y/%q")
out
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
out
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out[,"x"],"date", t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out[,"x"], col = "steelblue")
lines(out[,"trend"], col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend)")
lines(out[,"cycle"], col = "steelblue")
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","GDPC1","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
out
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out[,"x"],"date", t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out[,"x"], col = "steelblue")
lines(out[,"trend"], col = "red")
plot(out$x,out$DATE, t= "n", main = paste(hpf$title, "of", hpf$xname))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$x, col = "steelblue")
lines(out$trend, col = "red")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$x, col = "steelblue")
lines(out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","GDPC1","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$x, col = "steelblue")
lines(out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend)")
lines(out[,"cycle"], col = "steelblue")
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
library(mFilter)
library(quantmod)
library(Quandl)
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","GDPC1","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend)")
lines(out[,"cycle"], col = "steelblue")
library(mFilter)
library(quantmod)
library(Quandl)
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","GDPC1","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend) of GDP")
lines(out[,"cycle"], col = "steelblue")
Retail = Quandl("FRED/RSXFS", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(Retail$RSXFS),freq = 1600)
out <- cbind(Retail,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","RSXFS","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend) of Retail")
lines(out[,"cycle"], col = "steelblue")
ECOM = Quandl("FRED/ECOMSA", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(ECOM$ECOMSA),freq = 1600)
out <- cbind(ECOM,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","ECOMSA","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend) of Retail")
lines(out[,"cycle"], col = "steelblue")
ecom
ECOM
ECOM = Quandl("FRED/ECOMSA", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(ECOM$VALUE),freq = 1600)
out <- cbind(ECOM,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","ECOMSA","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend) of Retail")
lines(out[,"cycle"], col = "steelblue")
ECOM = Quandl("FRED/ECOMSA", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(ECOM$VALUE),freq = 1600)
out <- cbind(ECOM,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","ECOMSA","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend) of Ecommerce")
lines(out[,"cycle"], col = "steelblue")
ar(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of Ecommerce")
lines(out$DATE,out$cycle, col = "steelblue")
library(mFilter)
library(quantmod)
library(Quandl)
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","GDPC1","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend) of GDP")
lines(out[,"cycle"], col = "steelblue")
Retail = Quandl("FRED/RSXFS", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(Retail$RSXFS),freq = 1600)
out <- cbind(Retail,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","RSXFS","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend) of Retail")
lines(out[,"cycle"], col = "steelblue")
ECOM = Quandl("FRED/ECOMSA", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(ECOM$VALUE),freq = 1600)
out <- cbind(ECOM,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","ECOMSA","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of Ecommerce")
lines(out$DATE,out$cycle, col = "steelblue")
library(mFilter)
library(quantmod)
library(Quandl)
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","GDPC1","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend) of GDP")
lines(out[,"cycle"], col = "steelblue")
GDPCycle <- out$cycle
Retail = Quandl("FRED/RSXFS", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(Retail$RSXFS),freq = 1600)
out <- cbind(Retail,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","RSXFS","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out[,"cycle"], t = "n", main = "Cyclical component (deviations from trend) of Retail")
lines(out[,"cycle"], col = "steelblue")
RetailCycle <- out$cycle
ECOM = Quandl("FRED/ECOMSA", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(ECOM$VALUE),freq = 1600)
out <- cbind(ECOM,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","ECOMSA","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of Ecommerce")
lines(out$DATE,out$cycle, col = "steelblue")
EcommerceCycle <- out$cycle
EcommerceCycle
cor(EcommerceCycle,GDPCycle)
cor(RetailCycle,GDPCycle)
var(EcommerceCycle)
var(RetailCycle)
library(mFilter)
library(quantmod)
library(Quandl)
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","GDPC1","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of GDP")
lines(out$DATE,out$cycle,col = "steelblue")
GDPCycle <- out$cycle
Retail = Quandl("FRED/RSXFS", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(Retail$RSXFS),freq = 1600)
out <- cbind(Retail,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","RSXFS","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of Retail")
lines(out$DATE,out$cycle, col = "steelblue")
RetailCycle <- out$cycle
ECOM = Quandl("FRED/ECOMSA", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
hpf <- hpfilter(log(ECOM$VALUE),freq = 1600)
out <- cbind(ECOM,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","ECOMSA","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of Ecommerce")
lines(out$DATE,out$cycle, col = "steelblue")
EcommerceCycle <- out$cycle
install.packages("reshape2")
library("data.table")
library("reshape2")
#loading the data lables and descriptions, only take the second col
activityLables <- read.table("./UCI HAR Dataset/activity_labels.txt")[,2]
features <- read.table("./UCI HAR Dataset/features.txt")[,2]
#getting the mean and stddev for each measurement
features_mean_std <- grepl("mean|std",features)
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
names(X-test) = features
X_test <- X_text[,features_mean_std]
Y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
#merge the test data
test_data <- cbind(as.data.table(subject_test),X_test, Y_test)
setwd("~/Dropbox/Coursera/R Programming/data cleaning/R-data-cleaning")
#Final Project
# loading the library required
library("data.table")
library("reshape2")
#loading the data lables and descriptions, only take the second col
activityLables <- read.table("./UCI HAR Dataset/activity_labels.txt")[,2]
features <- read.table("./UCI HAR Dataset/features.txt")[,2]
#getting the mean and stddev for each measurement
features_mean_std <- grepl("mean|std",features)
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
names(X-test) = features
X_test <- X_text[,features_mean_std]
Y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
#merge the test data
test_data <- cbind(as.data.table(subject_test),X_test, Y_test)
test_data
head(test_data)
head(test_data)
names(Y_test) = c["activity_ID", "activity_label"]
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
names(subject_test) = "subject"
#merge the test data
test_data <- cbind(as.data.table(subject_test),X_test, Y_test)
test_data
Y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt")
Y_test [,2] = activityLables[Y_test[,1]]
names(Y_test) = c["activity_ID", "activity_label"]
Y_test[,2] = activityLables[Y_test[,1]]
names(Y_test) = c["activity_ID", "activity_label"]
Y_test[,2] = activityLables[Y_test[,1]]
names(Y_test) = c("activity_ID", "activity_label")
Y_test
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
names(subject_test) = "subject"
#merge the test data
test_data <- cbind(as.data.table(subject_test),X_test, Y_test)
test_data
x_test
X_test
#Final Project
# loading the library required
library("data.table")
library("reshape2")
#loading the data lables and descriptions, only take the second col
activityLables <- read.table("./UCI HAR Dataset/activity_labels.txt")[,2]
features <- read.table("./UCI HAR Dataset/features.txt")[,2]
#getting the mean and stddev for each measurement
features_mean_std <- grepl("mean|std",features)
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
names(X_test) = features
X_test <- X_text[,features_mean_std]
Y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt")
Y_test[,2] = activityLables[Y_test[,1]]
names(Y_test) = c("activity_ID", "activity_label")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
names(subject_test) = "subject"
#merge the test data
test_data <- cbind(as.data.table(subject_test),X_test, Y_test)
#####################
#  train     data   #
#####################
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
names(X_train) = features
X_train <- X_train[,features_mean_std]
Y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt")
Y_train[,2] = activityLables[Y_train[,1]]
names(Y_train) = c("activity_ID", "activity_label")
subject_train <- read.table("./UCI HAR Dataset/test/subject_train.txt")
names(subject_train) = "subject"
#merge the test data
test_train <- cbind(as.data.table(subject_train),X_train, Y_train)
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
names(subject_train) = "subject"
#merge the test data
train_data <- cbind(as.data.table(subject_train),X_train, Y_train)
test_data
train_data
#Merge the train and test data
combined_Data <- rbind(test_data,train_data)
melt_combined_data <- melt(combined_Data, id = c("subject","activity_label","activity_ID"), measures.vars = setdiff(colnames(combined_Data),c("subject","activity_label","activity_ID")))
tidy_data = dcast(melt_combined_data, subject + activity_label ~ variable, mean)
combined_Data <- rbind(test_data,train_data)
id_label =  c("subject","activity_label","activity_ID")
data_lables = setdiff(colnames(combined_Data), id_label)
melt_combined_data = melt(combined_Data, id = id_label, measures.vars = data_lables)
#Final Project
# loading the library required
library("data.table")
library("reshape2")
#loading the data lables and descriptions, only take the second col
activityLables <- read.table("./UCI HAR Dataset/activity_labels.txt")[,2]
features <- read.table("./UCI HAR Dataset/features.txt")[,2]
#getting the mean and stddev for each measurement
features_mean_std <- grepl("mean|std",features)
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
names(X_test) = features
X_test <- X_text[,features_mean_std]
Y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt")
Y_test[,2] = activityLables[Y_test[,1]]
names(Y_test) = c("activity_ID", "activity_label")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
names(subject_test) = "subject"
#merge the test data
test_data <- cbind(as.data.table(subject_test),X_test, Y_test)
#####################
#  train     data   #
#####################
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
names(X_train) = features
X_train <- X_train[,features_mean_std]
Y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt")
Y_train[,2] = activityLables[Y_train[,1]]
names(Y_train) = c("activity_ID", "activity_label")
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
names(subject_train) = "subject"
#merge the train data
train_data <- cbind(as.data.table(subject_train),X_train, Y_train)
#Merge the train and test data
combined_Data <- rbind(test_data,train_data)
id_label =  c("subject","activity_label","activity_ID")
data_lables = setdiff(colnames(combined_Data), id_label)
melt_combined_data = melt(combined_Data, id = id_label, measures.vars = data_lables)
tidy_data = dcast(melt_combined_data, subject + activity_label ~ variable, mean)
x_test
test_data
head(test_data)
train_data
X_test <- X_text[,features_mean_std]
names(X_test) = features
X_test <- X_test[,features_mean_std]
Y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt")
Y_test[,2] = activityLables[Y_test[,1]]
names(Y_test) = c("activity_ID", "activity_label")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
names(subject_test) = "subject"
#merge the test data
test_data <- cbind(as.data.table(subject_test),X_test, Y_test)
combined_Data <- rbind(test_data,train_data)
id_label =  c("subject","activity_label","activity_ID")
data_lables = setdiff(colnames(combined_Data), id_label)
melt_combined_data = melt(combined_Data, id = id_label, measures.vars = data_lables)
tidy_data = dcast(melt_combined_data, subject + activity_label ~ variable, mean)
write.table(tidy_data, file = "./tidy_data.txt")
write.table(tidy_data, file = "./tidy_data.txt")
tidy_data
