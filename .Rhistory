utils:::menuInstallPkgs()
install.packages("mFilter")
install.packages("quantmod")
install.packages("Quandl")
library(mFilter)
library(quantmod)
library(Quandl)
#Getting the Real GDP data from FRED
GDP = Quandl("FRED/GDPC1", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
#Apply HP Filter
hpf <- hpfilter(log(GDP$GDPC1),freq = 1600)
out <- cbind(GDP,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","GDPC1","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
#Plot the Trend
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
#Plotting Cyclical Component
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of GDP")
lines(out$DATE,out$cycle,col = "steelblue")
GDPCycle <- out$cycle
#Getting the Retail data from FRED
Retail = Quandl("FRED/RSXFS", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
#Apply HP Filter
hpf <- hpfilter(log(Retail$RSXFS),freq = 1600)
out <- cbind(Retail,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","RSXFS","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
#Plot the Trend
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
#Plotting Cyclical Component
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of Retail")
lines(out$DATE,out$cycle, col = "steelblue")
RetailCycle <- out$cycle
#Getting the E-commerce data from FRED
ECOM = Quandl("FRED/ECOMSA", collapse="quarterly", start_date="2000-1-01", end_date="2016-12-31")
#Apply HP Filter
hpf <- hpfilter(log(ECOM$VALUE),freq = 1600)
out <- cbind(ECOM,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("DATE","ECOMSA","x", "trend", "cycle")
out$DATE <-as.yearqtr(out$DATE, format = "%Y/%q")
#Plot the Trend
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
#Plot Cyclical Component
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of Ecommerce")
lines(out$DATE,out$cycle, col = "steelblue")
EcommerceCycle <- out$cycle
# Calculating the variances and correlations
cor(RetailCycle, GDPCycle)
cor(EcommerceCycle, GDPCycle)
var(RetailCycle)
var(EcommerceCycle)
#Plot Cyclical Components for Retail, E-commerce and GDP in one graph
plot(out$DATE,EcommerceCycle,  xlab="Date",  ylab="Cyclical", t = "n", main = "Cyclical component (deviations from trend) of E-commerce, Retail and GDP")
lines(out$DATE,EcommerceCycle, col = "steelblue")
lines(out$DATE,RetailCycle, col = "green")
lines(out$DATE,GDPCycle, col = "red")
legend("topleft", legend = c("Retail", "E-commerce","GDP"), col = c("green","steelblue", "red"), lty = rep(1, 2), ncol = 2)
q()
q()
library(mFilter)
library(quantmod)
library(readxl)
japan_realgdp <- read.csv("C:/Users/chuan/Dropbox/Tepper/Global Econ/japan.csv")
japan_realgdp <-japan_realdgp[, c("Year","realGDP")]
#Apply HP Filter
hpf <- hpfilter(log(japan_realgdp@realGDP),freq = 100)
out <- cbind(japan_realgdp,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("year","GDP","x", "trend", "cycle")
#Plot the Trend
library(mFilter)
library(quantmod)
library(readxl)
japan_realgdp <- read.csv("C:/Users/chuan/Dropbox/Tepper/Global Econ/japan.csv")
japan_realgdp <-japan_realgdp[, c("Year","realGDP")]
#Apply HP Filter
hpf <- hpfilter(log(japan_realgdp@realGDP),freq = 100)
out <- cbind(japan_realgdp,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("year","GDP","x", "trend", "cycle")
#Plot the Trend
asS4(japan_realgdp)
isS4(japan_realgdp)
colnames(japan_realgdp)
log(japan_realgdp[,2])
hpf <- hpfilter(log(japan_realgdp[,c("realGDP")],freq = 100)
out <- cbind(japan_realgdp,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("year","GDP","x", "trend", "cycle")
#Plot the Trend
hpf <- hpfilter(log(japan_realgdp[,c("realGDP")]),freq = 100)
out <- cbind(japan_realgdp,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("year","GDP","x", "trend", "cycle")
#Plot the Trend
hpf <- hpfilter(log(japan_realgdp[,2]),freq = 100)
out <- cbind(japan_realgdp,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("year","GDP","x", "trend", "cycle")
#Plot the Trend
log(japan_realgdp[,2])
japan_realgdp[,2]
data<-log(japan_realgdp[,2])
log(as.numeric(japan_realgdp[,2]))
library(mFilter)
library(quantmod)
library(readxl)
japan_realgdp <- read.csv("C:/Users/chuan/Dropbox/Tepper/Global Econ/japan.csv")
japan_realgdp <-japan_realgdp[, c("Year","realGDP")]
#Apply HP Filter
hpf <- hpfilter(log(as.numeric(japan_realgdp[,2])),freq = 100)
out <- cbind(japan_realgdp,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("year","GDP","x", "trend", "cycle")
#Plot the Trend
out
library(mFilter)
library(quantmod)
library(readxl)
japan_realgdp <- read.csv("C:/Users/chuan/Dropbox/Tepper/Global Econ/japan.csv")
japan_realgdp <-japan_realgdp[, c("Year","realGDP")]
#Apply HP Filter
hpf <- hpfilter(log(as.numeric(japan_realgdp[,2])),freq = 100)
out <- cbind(japan_realgdp,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("year","GDP","x", "trend", "cycle")
#Plot the Trend
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out$DATE,out$x, t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out$DATE,out$x, col = "steelblue")
lines(out$DATE,out$trend, col = "red")
legend("topleft", legend = c(hpf$xname, "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
#Plotting Cyclical Component
plot(out$DATE,out$cycle, t = "n", main = "Cyclical component (deviations from trend) of GDP")
lines(out$DATE,out$cycle,col = "steelblue")
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out[,1],out[,3], t= "n", main = paste(hpf$title, "of", hpf$xname))
lines(out[,1],out[,3], col = "steelblue")
lines(out[,1],out[,4], col = "red")
legend("topleft", legend = c("realGDP", "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
#Plotting Cyclical Component
plot(out[,1],out[,5], t = "n", main = "Cyclical component (deviations from trend) of GDP")
lines(out[,1],out[,5],col = "steelblue")
library(mFilter)
library(quantmod)
library(readxl)
japan_realgdp <- read.csv("C:/Users/chuan/Dropbox/Tepper/Global Econ/japan.csv")
japan_realgdp <-japan_realgdp[, c("Year","realGDP")]
#Apply HP Filter
hpf <- hpfilter(log(as.numeric(japan_realgdp[,2])),freq = 100)
out <- cbind(japan_realgdp,hpf$x, hpf$trend, hpf$cycle)
colnames(out) <- c("year","GDP","x", "trend", "cycle")
#Plot the Trend
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out[,1],out[,3], t= "n", main = paste("hpf$title", "of", "log of Japan realGDP"))
lines(out[,1],out[,3], col = "steelblue")
lines(out[,1],out[,4], col = "red")
legend("topleft", legend = c("realGDP", "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
#Plotting Cyclical Component
plot(out[,1],out[,5], t = "n", main = "Cyclical component (deviations from trend) of GDP")
lines(out[,1],out[,5],col = "steelblue")
#Plot the Trend
par(mfrow = c(2, 1), mar = c(3, 2, 2, 1))
plot(out[,1],out[,3], t= "n", main = paste(hpf$title, "of", "log of Japan realGDP"))
lines(out[,1],out[,3], col = "steelblue")
lines(out[,1],out[,4], col = "red")
legend("topleft", legend = c("realGDP", "trend"), col = c("steelblue", "red"), lty = rep(1, 2), ncol = 2)
#Plotting Cyclical Component
plot(out[,1],out[,5], t = "n", main = "Cyclical component (deviations from trend) of GDP")
lines(out[,1],out[,5],col = "steelblue")
read.csv("getdata.csv")
mydata<-read.csv("getdata.csv")
colnames(mydata)
nrow(mydata[,"VAL">1000000])
nrow(mydata)
head(mydata)
table(mydata)
table()
filterdata <- mydata[val>100000]
filterdata <- mydata[,val>100000]
setwd("C:/Users/chuan/Dropbox/Coursera/R Programming/data cleaning")
microdata <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"))
sum(microdata, VAL=24)
sum(microdata[VAL]=24, na.rm=TRUE)
sum(microdata[VAL]==24, na.rm=TRUE)
colnames(microdata)
sum(microdata(VAL)==24, na.rm=TRUE)
sum(microdata['VAL']==24, na.rm=TRUE)
library(xlsx)
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xls("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
library(xlsx)
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages(xlsx)
install.packages("xlsx")
library("xlsx")
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
library("xlsx")
Sys.setenv(JAVA_HOME = 'C:\\Program Files (x86)\\Java\\jre1.8.0_131')
library("xlsx")
install.packages('rJava')
library("xlsx")
library("xlsx")
Sys.setenv(JAVA_HOME = 'C:\\Program Files\\Java\\jre1.8.0_131')
library("xlsx")
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
dat <- read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
dat <- read.xlsx("getdata%2Fdata%2FDATA.gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
dat <- read.xlsx("gasdata.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
dat <- read.xlsx("R-data-cleaning\gasdata.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
dat <- read.xlsx("R-data-cleaning\\gasdata.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages(XML)
install.packages("XML")
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
restaurantDat <- xmlTreeParse(fileUrl, useInternal = TRUE)
zipcodes <- xpathSApply(restaurantDat, "//zipcode",xmlValue)
sum(zipcode == 21231, na.rm = T)
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
restaurantDat <- xmlTreeParse(fileUrl, useInternal = TRUE)
zipcodes <- xpathSApply(restaurantDat, "//zipcode",xmlValue)
sum(zipcodes == 21231, na.rm = T)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
restaurantDat <- xmlTreeParse(fileUrl, useInternal = TRUE)
setwd("C:/Users/chuan/Dropbox/Coursera/R Programming/data cleaning/R-data-cleaning")
fileUrl <- "restaurantdata"
restaurantDat <- xmlTreeParse(fileUrl, useInternal = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile ="resdata.xml")
fileUrl <- "restdata.xml"
restaurantDat <- xmlTreeParse(fileUrl, useInternal = TRUE)
zipcodes <- xpathSApply(restaurantDat, "//zipcode",xmlValue)
length(zipcodes[zipcode == 21231], na.rm = T)
DT <- fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv')
library(fread)
# Question 4 - How many characters are in the 10th, 20th, 30th and 1000th lines of HTML from this page
con = url("http://biostat.jhsph.edu/~jleek/contact.html ")
htmlCode = readLines(con)
close(con)
htmlCode
nchar(htmlCode[10]) # 45
nchar(htmlCode[20]) # 31
nchar(htmlCode[30]) # 7
nchar(htmlCode[100]) # 25
# Question 5 - Read the data set into R and report the sum of the numbers in the fourth of the nine columns
# Downloading data from the Web
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
# Using method = "curl" doesn't seem to work on Windows
download.file(fileUrl, destfile = "./data/ac_survey.csv")
?read.fwf
q5_df <- read.fwf(file = "./data/q5_data.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
head(q5_df)
# Need to sum up the V6 column
sum(q5_df$V6) # 32426.7
# Downloading data from the Web
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
# Using method = "curl" doesn't seem to work on Windows
download.file(fileUrl, destfile = "ac_survey.csv")
?read.fwf
q5_df <- read.fwf(file = "./data/q5_data.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
head(q5_df)
# Need to sum up the V6 column
sum(q5_df$V6) # 32426.7
# Downloading data from the Web
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
# Using method = "curl" doesn't seem to work on Windows
download.file(fileUrl, destfile = "ac_survey.csv")
?read.fwf
q5_df <- read.csv(file = "./data/q5_data.csv", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
head(q5_df)
# Need to sum up the V6 column
sum(q5_df$V6) # 32426.7
# Downloading data from the Web
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
# Using method = "curl" doesn't seem to work on Windows
download.file(fileUrl, destfile = "ac_survey.for")
?read.fwf
q5_df <- read.fwf(file = "ac_survey.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
head(q5_df)
# Need to sum up the V6 column
sum(q5_df$V6) # 32426.7
